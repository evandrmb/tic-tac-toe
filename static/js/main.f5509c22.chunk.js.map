{"version":3,"sources":["context/Game/Game.js","components/Square/Square.js","components/Board/Board.js","components/HistoryBar/HistoryBar.js","App.js","index.js"],"names":["GameContext","createContext","GameProvider","children","player1","player2","initialBoard","Array","fill","initialHistory","board","nextPlayer","useState","setBoard","history","setHistory","currentMove","setCurrentMove","useEffect","restart","setTimeout","diagonal1","diagonal2","alert","rowIndex","every","square","row","length","Provider","value","getPlayer","markSquare","index","boardCopy","slice","move","historyCopy","getSquare","back","forward","Square","column","useContext","className","onClick","Board","HistoryBar","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f5509c22.chunk.js","sourcesContent":["import { useState, createContext, useEffect } from \"react\";\n\nconst GameContext = createContext();\n\nexport const GameProvider = ({ children }) => {\n  const player1 = \"X\";\n  const player2 = \"O\";\n\n  const initialBoard = Array(3).fill(Array(3).fill(null));\n  const initialHistory = [\n    {\n      board: initialBoard,\n      nextPlayer: player1,\n    },\n  ];\n\n  const [board, setBoard] = useState(initialBoard);\n  const [history, setHistory] = useState(initialHistory);\n  const [currentMove, setCurrentMove] = useState(0);\n  // console.log(\"After Mark\");\n  // console.log(`HistoryLength: ${history.length}`);\n  // console.log(`CurrentMove: ${currentMove}`);\n\n  useEffect(() => {\n    function restart() {\n      setTimeout(() => {\n        setCurrentMove(0);\n        setBoard(initialBoard);\n        setHistory(initialHistory);\n      }, 3000);\n    }\n\n    const diagonal1 =\n      board[0][0] === board[1][1] &&\n      board[1][1] === board[2][2] &&\n      (board[2][2] === player1 || board[2][2] === player2);\n\n    const diagonal2 =\n      board[0][2] === board[1][1] &&\n      board[1][1] === board[2][0] &&\n      (board[1][1] === player1 || board[1][1] === player2);\n\n    if (diagonal1 || diagonal2) {\n      alert(`Player ${board[1][1]} won!`);\n      restart();\n      return;\n    }\n\n    for (let rowIndex = 0; rowIndex < board.length; rowIndex++) {\n      if (\n        board[rowIndex].every((square) => square === player1) ||\n        board[rowIndex].every((square) => square === player2)\n      ) {\n        alert(`Player ${board[rowIndex][0]} won!`);\n        restart();\n        return;\n      }\n      if (\n        board.every((row) => row[rowIndex] === player1) ||\n        board.every((row) => row[rowIndex] === player2)\n      ) {\n        alert(`Player ${board[0][rowIndex]} won!`);\n        restart();\n\n        return;\n      }\n    }\n  }, [board]);\n\n  function getSquare(rowIndex, index) {\n    return board[rowIndex][index];\n  }\n\n  function markSquare(rowIndex, index) {\n    const boardCopy = board.slice();\n\n    const row = board[rowIndex].slice();\n\n    row[index] = history[currentMove].nextPlayer;\n    boardCopy[rowIndex] = row;\n\n    let nextPlayer = \"\";\n    if (history[currentMove].nextPlayer === \"X\") {\n      nextPlayer = \"O\";\n    } else {\n      nextPlayer = \"X\";\n    }\n\n    const move = currentMove + 1;\n\n    if (move < history.length) {\n      const historyCopy = history.slice(0, move);\n\n      setHistory([\n        ...historyCopy,\n        { board: boardCopy, nextPlayer: nextPlayer },\n      ]);\n      setCurrentMove(historyCopy.length);\n    } else {\n      setHistory([...history, { board: boardCopy, nextPlayer: nextPlayer }]);\n      setCurrentMove(move);\n    }\n\n    setBoard(boardCopy);\n  }\n\n  function back() {\n    if (currentMove > 0) {\n      const move = currentMove - 1;\n      setCurrentMove(move);\n      setBoard(history[move][\"board\"]);\n    }\n  }\n\n  function forward() {\n    const move = currentMove + 1;\n    if (move < history.length) {\n      setCurrentMove(move);\n      setBoard(history[move][\"board\"]);\n    }\n  }\n\n  function getPlayer() {\n    return history[currentMove].nextPlayer;\n  }\n\n  return (\n    <GameContext.Provider\n      value={{ getPlayer, markSquare, getSquare, back, forward }}\n    >\n      {children}\n    </GameContext.Provider>\n  );\n};\n\nexport default GameContext;\n","import { useContext } from \"react\";\nimport GameContext from \"../../context/Game/Game\";\nimport \"./styles.css\";\n\nconst Square = ({ row, column }) => {\n  const { markSquare, getSquare } = useContext(GameContext);\n\n  return (\n    <button\n      className=\"square\"\n      onClick={() => {\n        markSquare(row, column);\n      }}\n    >\n      {getSquare(row, column)}\n    </button>\n  );\n};\n\nexport default Square;\n","import { useContext } from \"react\";\nimport GameContext from \"../../context/Game/Game\";\nimport Square from \"../Square/Square\";\nimport \"./styles.css\";\n\nconst Board = () => {\n  const { getPlayer } = useContext(GameContext);\n\n  return (\n    <div className=\"board\">\n      <h2 className=\"board__helper\">Current Player is: {getPlayer()}</h2>\n      <div className=\"board__row\">\n        <Square row={0} column={0}></Square>\n        <Square row={0} column={1}></Square>\n        <Square row={0} column={2}></Square>\n      </div>\n      <div className=\"board__row\">\n        <Square row={1} column={0}></Square>\n        <Square row={1} column={1}></Square>\n        <Square row={1} column={2}></Square>\n      </div>\n      <div className=\"board__row\">\n        <Square row={2} column={0}></Square>\n        <Square row={2} column={1}></Square>\n        <Square row={2} column={2}></Square>\n      </div>\n    </div>\n  );\n};\n\nexport default Board;\n","import { useContext } from \"react\";\nimport GameContext from \"../../context/Game/Game\";\nimport \"./styles.css\";\n\nconst HistoryBar = () => {\n  const { back, forward } = useContext(GameContext);\n\n  return (\n    <ul className=\"bar\">\n      <li className=\"bar__item\">\n        <button className=\"bar__item__button\" onClick={() => back()}>\n          {\"<\"}\n        </button>\n      </li>\n      <li className=\"bar__item\">\n        <button className=\"bar__item__button\" onClick={() => forward()}>\n          {\">\"}\n        </button>\n      </li>\n    </ul>\n  );\n};\n\nexport default HistoryBar;\n","import \"./App.css\";\nimport Board from \"./components/Board/Board.js\";\nimport HistoryBar from \"./components/HistoryBar/HistoryBar\";\nimport { GameProvider } from \"./context/Game/Game\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <GameProvider>\n        <div className=\"display\">\n          <Board></Board>\n          <HistoryBar className=\"historyBar\"></HistoryBar>\n        </div>\n      </GameProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}